{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9882396dbe360ec58f16.hot-update.js","sources":["webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/split-on-first/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./pages/index.jsx"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: removeHash(input).split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n\nexports.stringifyUrl = (input, options) => {\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl);\n\tconst hash = getHash(input.url);\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","import Head from \"next/head\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n// import moment from \"moment-timezone\";\r\nimport Axios from \"axios\";\r\nimport { stringify } from \"query-string\";\r\n\r\n// import { console } from \"window-or-global\";\r\n\r\n\r\nfunction Page() {\r\n\r\n  //RENDIRAZAÇÃO CONDICIONAL OU CONDIÇÃO TERNARIA\r\n  const ativo = true\r\n  \r\n  function initialGA() {\r\n    ReactGA.initialize(\"UA-170909874-1\");\r\n    ReactGA.pageview(urlLocal);\r\n  }\r\n  let urlLocal;\r\n  if (typeof window !== \"undefined\") {\r\n    urlLocal = window.location?.href;\r\n  }\r\n  initialGA();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState();\r\n  const [nome, setNome] = useState();\r\n  const [rede, setRede] = useState();\r\n  const [sobrenome, setSobrenome] = useState();\r\n  const [culto, setCulto] = useState();\r\n  const [criancas, setCriancas] = useState();\r\n  const url = \"https://aguaviva-rp.firebaseio.com/teste.json\";\r\n  var date = new Date();\r\n  var dia_sem = date.getDay();\r\n\r\n  // var dateMoment = moment(`${date}`);\r\n  // dateMoment.tz(\"America/Sao_Paulo\").format(\"ha z\");\r\n  // moment.locale(\"pt-BR\");\r\n  // const novaData = new Date(dateMoment);\r\n  // var dia_sem = moment(novaData).format(\"dddd\");\r\n  const [qtdSabado, setQtdSabado] = useState();\r\n  const [qtdDomingoManha, setQtdDomingoManha] = useState();\r\n  const [qtdDomingoNoite, setQtdDomingoNoite] = useState();\r\n  const [nomeLimpar, setNomeLimpar] = useState(true);\r\n  const [sobrenomeLimpar, setSobrenomeLimpar] = useState(true);\r\n  const [redeLimpar, setRedeLimpar] = useState(true);\r\n  const [criancasLimpar, setCriancasLimpar] = useState(true);\r\n  const [listagem, setListagem] = useState();\r\n  var qtdMAxima = 75;\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Axios.get(url).then((res) => {\r\n      setData(res.data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (data) {\r\n      const cultoSabado = Object.keys(data).filter((pessoa) => {\r\n        return data[pessoa].culto == \"sabado\";\r\n      });\r\n      setQtdSabado(cultoSabado.length);\r\n      const cultoDomingoManha = Object.keys(data).filter((pessoa) => {\r\n        return data[pessoa].culto == \"manha\";\r\n      });\r\n      setQtdDomingoManha(cultoDomingoManha.length);\r\n      const cultoDomingoNoite = Object.keys(data).filter((pessoa) => {\r\n        return data[pessoa].culto == \"noite\";\r\n      });\r\n      setQtdDomingoNoite(cultoDomingoNoite.length);\r\n      setListagem(data);\r\n      // ATENÇÃO USE ESSE CÓDIGO COM CAUTELA, REMOVE TUDO //\r\n      // if (dia_sem >= 1 && dia_sem <= 5) {\r\n      //   Object.entries(data).map((individuo) => {\r\n      //     if (individuo[0] != \"base\") {\r\n      //       doRemove(individuo[0]);\r\n      //     }\r\n      //   });\r\n      // }\r\n    }\r\n  }, [data]);\r\n  const doRemove = (id) => {\r\n    remove(`https://aguaviva-rp.firebaseio.com/teste/${id}.json`);\r\n  };\r\n  const remove = (url) => {\r\n    Axios.delete(url).then(() => {\r\n      console.log(`você deletou ${url}`);\r\n    });\r\n  };\r\n  var redirect;\r\n  if (typeof window !== \"undefined\") {\r\n    redirect = window.location.href;\r\n  }\r\n  const post = (data) => {\r\n    Axios.post(url, data).then((res) => {\r\n      setNomeLimpar(!nomeLimpar);\r\n      setSobrenomeLimpar(!sobrenomeLimpar);\r\n      setRedeLimpar(!redeLimpar);\r\n      setCriancasLimpar(!criancasLimpar);\r\n      alert(\"você confirmou sua presença no culto\");\r\n      window.location = \"/listagem.html\";\r\n    });\r\n  };\r\n\r\n  const salve = () => {\r\n    if (nome && sobrenome && rede && culto) {\r\n      const existeCriancas = criancas ? criancas : \"0\";\r\n      post({\r\n        nome: nome.toLowerCase(),\r\n        sobrenome: sobrenome,\r\n        rede: rede,\r\n        culto: culto,\r\n        criancas: existeCriancas,\r\n        chegada: false,\r\n      });\r\n    } else {\r\n      alert(\"Um ou mais campos estão em branco\");\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // null | \"\" | undefined | false\r\nconst existe = true\r\n\r\n\r\n// 1 se eu colocar minha variavel com um valor que existe meu select vai exibir os cultos de sabados\r\n//quando nao atender ela vai exibir cultos de terça feira\r\n\r\n// 2 criar uma segunda variavel que se for igual a \"Ativo\" exiba o botao inscrever\r\n\r\n  return (\r\n    <>\r\n      {/* {existe && <>teste</>} \r\n      {existe ? <>teste</> : <>teste2</>} */}\r\n      <Head>\r\n        <title>Igreja Batista Água Viva - Ribeirão Pires</title>\r\n      </Head>\r\n      {existe && (\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <img src=\"/images/logo.jpg\" />\r\n          <h1>Formulário para culto dos jovens (24/04)</h1>\r\n        </div>\r\n\r\n        {/* {(qtdSabado < qtdMAxima || */}\r\n        {(qtdDomingoManha < qtdMAxima || qtdDomingoNoite < qtdMAxima) && (\r\n          // <>\r\n          //   {(dia_sem == 0 || dia_sem == 5 || dia_sem == 6) && (\r\n              <>\r\n                {listagem ? (\r\n                  <div className=\"form\">\r\n                    <label>Nome</label>\r\n                    {nomeLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setNome(e.currentTarget.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Nome \"\r\n                        className=\"input_name\"\r\n                        required\r\n                      />\r\n                    )}\r\n                    {!nomeLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setNome(e.currentTarget.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Nome \"\r\n                        className=\"input_name\"\r\n                        required\r\n                      />\r\n                    )}\r\n\r\n                    <br></br>\r\n                    <label>Sobrenome</label>\r\n                    {sobrenomeLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setSobrenome(e.currentTarget.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Sobrenome\"\r\n                        required\r\n                      />\r\n                    )}\r\n                    {!sobrenomeLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setSobrenome(e.currentTarget.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Sobrenome\"\r\n                        required\r\n                      />\r\n                    )}\r\n                    <br></br>\r\n                    <label>Discipulado</label>\r\n                    {redeLimpar && (\r\n                      <select\r\n                        onChange={(e) => {\r\n                          setRede(e.target.value);\r\n                        }}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Selecione seu discipulado</option>\r\n                        <option value=\"isabela\">Isabela Amaro</option>\r\n                        <option value=\"matheus\">Matheus Amaro</option>\r\n                        <option value=\"felipe\">Felipe Ramos</option>\r\n                        <option value=\"silas\">\r\n                          Silas Souza\r\n                        </option>\r\n                        <option value=\"elaine\">Elaine Jeremias </option>\r\n                      </select>\r\n                    )}\r\n                    {!redeLimpar && (\r\n                      <select\r\n                        onChange={(e) => {\r\n                          setRede(e.target.value);\r\n                        }}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Selecione seu discipulado</option>\r\n                        <option value=\"isabela\">Isabela Amaro</option>\r\n                        <option value=\"matheus\">Matheus Amaro</option>\r\n                        <option value=\"felipe\">Felipe Ramos</option>\r\n                        <option value=\"silas\">\r\n                          Silas Souza\r\n                        </option>\r\n                        <option value=\"elaine\">Elaine Jeremias </option>\r\n                      </select>\r\n                    )}\r\n                    <br></br>\r\n                    <label>Qual culto deseja ir?</label>\r\n                    <select\r\n                      onChange={(e) => {\r\n                        setCulto(e.target.value);\r\n                      }}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Selecione o culto</option>\r\n                      {/* {qtdSabado < qtdMAxima && (\r\n                        <option value=\"sabado\">Sábado - 19hs</option>\r\n                      )} */}\r\n                      {qtdDomingoManha < qtdMAxima && (\r\n                       <option value=\"manha\">\r\n                         stringify.{ativo ? <>.Sábado - 15hs</> : <p>asdas</p>} \r\n                        </option>\r\n                      )}\r\n                      {qtdDomingoNoite < qtdMAxima && (\r\n                        <option value=\"noite\">Sábado - 17:30hs </option>\r\n                      )}\r\n                    </select>\r\n                    {/* <br></br>\r\n                    <label>Quantas crianças vai levar para o cultinho?</label> */}\r\n                    {/* {criancasLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setCriancas(e.currentTarget.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Numero de crianças\"\r\n                        required\r\n                      />\r\n                    )}\r\n                    {!criancasLimpar && (\r\n                      <input\r\n                        onKeyUp={(e) => setCriancas(e.currentTarget.value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Numero de crianças\"\r\n                        required\r\n                      />\r\n                    )} */}\r\n                    <div className=\"vagas\">\r\n                      {/* <span>\r\n                        Sábado 19hs -\r\n                        {qtdSabado >= qtdMAxima && (\r\n                          <small className=\"red\"> vagas encerradas</small>\r\n                        )}\r\n                        {qtdSabado < qtdMAxima && (\r\n                          <>\r\n                            {qtdSabado >= 0 && (\r\n                              <> resta{qtdSabado != qtdMAxima - 1 && <>m</>}</>\r\n                            )}\r\n                            {qtdSabado >= 0 && (\r\n                              <small> {qtdMAxima - qtdSabado}</small>\r\n                            )}\r\n                            {qtdSabado >= 0 && (\r\n                              <> vaga{qtdSabado != qtdMAxima - 1 && <>s</>}</>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </span> */}\r\n                      <span>\r\n                        Sábado 15:00hs -\r\n                        {qtdDomingoManha >= qtdMAxima && (\r\n                          <small className=\"red\"> vagas encerradas</small>\r\n                        )}\r\n                        {qtdDomingoManha < qtdMAxima && (\r\n                          <>\r\n                            {qtdDomingoManha >= 0 && (\r\n                              <>\r\n                                {\" \"}\r\n                                resta\r\n                                {qtdDomingoManha != qtdMAxima - 1 && <>m</>}\r\n                              </>\r\n                            )}\r\n                            {qtdDomingoManha >= 0 && (\r\n                              <small> {qtdMAxima - qtdDomingoManha}</small>\r\n                            )}\r\n                            {qtdDomingoManha >= 0 && (\r\n                              <>\r\n                                {\" \"}\r\n                                vaga{qtdDomingoManha != qtdMAxima - 1 && <>s</>}\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </span>\r\n                      <span>\r\n                        Sábado 17:30hs -\r\n                        {qtdDomingoNoite >= qtdMAxima && (\r\n                          <small className=\"red\"> vagas encerradas</small>\r\n                        )}\r\n                        {qtdDomingoNoite < qtdMAxima && (\r\n                          <>\r\n                            {qtdDomingoNoite >= 0 && (\r\n                              <>\r\n                                {\" \"}\r\n                                resta\r\n                                {qtdDomingoNoite != qtdMAxima - 1 && <>m</>}\r\n                              </>\r\n                            )}\r\n                            {qtdDomingoNoite >= 0 && (\r\n                              <small> {qtdMAxima - qtdDomingoNoite}</small>\r\n                            )}\r\n                            {qtdDomingoNoite >= 0 && (\r\n                              <>\r\n                                {\" \"}\r\n                                vaga{qtdDomingoNoite != qtdMAxima - 1 && <>s</>}\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </span>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <button onClick={salve}>Inscrever</button>\r\n                    <a href=\"/listagem.html\" className=\"listagem\">\r\n                      Verifique a listagem\r\n                    </a>\r\n                  </div>\r\n                ) : (\r\n                  <p className=\"carregando\">\r\n                    <img src=\"/images/loading.gif\" />\r\n                    <span>Carregando...</span>\r\n                  </p>\r\n                )}\r\n              </>\r\n          //   )}\r\n          // </>\r\n        )}\r\n\r\n        {/* {qtdSabado >= qtdMAxima && */}\r\n        {qtdDomingoManha >= qtdMAxima &&\r\n          qtdDomingoNoite >= qtdMAxima &&\r\n          dia_sem != 1 &&\r\n          dia_sem != 2 &&\r\n          dia_sem != 3 &&\r\n          dia_sem != 4 && (\r\n            <div>\r\n              <p className=\"paragrafo\">\r\n                Infelizmente todos os cultos presenciais ja esgotaram sua\r\n                capacidade exigida por lei, mas acompanhe online pelas nossas\r\n                redes sociais\r\n                <div className=\"redes\">\r\n                  <a href=\"https://www.youtube.com/channel/UCSgeLNbDf68linYZ7XBzuug/videos\">\r\n                    <img src=\"/images/youtube.svg\" className=\"icon\" />\r\n                  </a>\r\n                  <a href=\"https://www.facebook.com/IbavRibeiraoPires/\">\r\n                    <img src=\"/images/facebook.svg\" className=\"icon\" />\r\n                  </a>\r\n                  <a href=\"https://www.instagram.com/ibavrp/\">\r\n                    <img src=\"/images/instagram.svg\" className=\"icon\" />\r\n                  </a>\r\n                </div>\r\n                <a href=\"/listagem.html\" className=\"listagem_encerrada\">\r\n                  Verifique a listagem dos cultos presenciais\r\n                </a>\r\n              </p>\r\n            </div>\r\n          )}\r\n        {/* {dia_sem >= 1 && dia_sem <= 4 && (\r\n          <div>\r\n            <p className=\"paragrafo\">\r\n              O site só abrirá as inscrições <b>sexta-feira as 00hs</b>\r\n              Enquanto espera nos acompanhe nas nossas redes sociais{\" \"}\r\n              <div className=\"redes\">\r\n                <a href=\"https://www.youtube.com/channel/UCSgeLNbDf68linYZ7XBzuug/videos\">\r\n                  <img src=\"/images/youtube.svg\" className=\"icon\" />\r\n                </a>\r\n                <a href=\"https://www.facebook.com/IbavRibeiraoPires/\">\r\n                  <img src=\"/images/facebook.svg\" className=\"icon\" />\r\n                </a>\r\n                <a href=\"https://www.instagram.com/ibavrp/\">\r\n                  <img src=\"/images/instagram.svg\" className=\"icon\" />\r\n                </a>\r\n              </div>\r\n            </p>\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n"],"mappingstWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAdA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAoBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AA9BA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC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","sourceRoot":""}